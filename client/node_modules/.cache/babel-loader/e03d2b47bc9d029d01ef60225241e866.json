{"ast":null,"code":"import _slicedToArray from \"/Users/corrinepusillo/Downloads/axo2/new/axolotl/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/corrinepusillo/Downloads/axo2/new/axolotl/client/src/components/UpdateProfile.js\";\nimport React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from 'react-router-dom';\nexport default function UpdateProfile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n\n  const _useAuth = useAuth(),\n        currentUser = _useAuth.currentUser,\n        updatePassword = _useAuth.updatePassword,\n        updateEmail = _useAuth.updateEmail;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const history = useHistory(); // function for handling the submit form event in our render().\n\n  function handleSubmit(e) {\n    // prevent the form fields from emptying on submit.\n    e.preventDefault(); // determine if the password value matches the password confirm value.\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match!\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises).then(() => {\n      history.push(\"/\");\n    }).catch(() => {\n      setError(\"Failed to update account\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Update Profile\"), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    ref: emailRef,\n    required: true,\n    defaultValue: currentUser.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    ref: passwordRef,\n    placeholder: \"Leave blank to leave the same password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    ref: passwordConfirmRef,\n    placeholder: \"Leave blank to leave the same password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    className: \"w-100\",\n    type: \"submit\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Update!\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 text-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n}","map":{"version":3,"sources":["/Users/corrinepusillo/Downloads/axo2/new/axolotl/client/src/components/UpdateProfile.js"],"names":["React","useRef","useState","Card","Form","Button","Alert","useAuth","Link","useHistory","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","updatePassword","updateEmail","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","promises","email","push","Promise","all","then","catch","finally"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function UpdateProfile(){\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { currentUser, updatePassword, updateEmail } = useAuth()\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n// function for handling the submit form event in our render().\nfunction handleSubmit(e){\n        // prevent the form fields from emptying on submit.\n        e.preventDefault()\n\n        // determine if the password value matches the password confirm value.\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError(\"Passwords do not match!\")\n        }\n\n\n        const promises = []\n        setLoading(true)\n        setError(\"\")\n        if (emailRef.current.value !== currentUser.email){\n            promises.push(updateEmail(emailRef.current.value))\n        }\n\n        if (passwordRef.current.value){\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises).then(() => {\n            history.push(\"/\")\n        }).catch(() => {\n            setError(\"Failed to update account\")\n        }).finally(() => {\n            setLoading(false)\n        })\n\n    }\n\n    return (\n        <>\n    <Card>\n        <Card.Body>\n            <h2 className=\"text-center mb-3\">Update Profile</h2>\n            {/* If there is an error with handleSubmit show it as a red alert */}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n                </Form.Group>\n\n                <Form.Group id=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to leave the same password\" />\n                </Form.Group>\n\n                <Form.Group id=\"password-confirm\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to leave the same password\"  />\n                </Form.Group>\n                <Button disabled={loading} className=\"w-100\" type=\"submit\" variant=\"success\">Update!</Button>\n            </Form>\n        </Card.Body>\n    </Card>\n    <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/dashboard\">Cancel</Link>\n    </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}